version: '3'
 
services:

  viz:
    image: dockersamples/visualizer
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - "8080:8080"
    deploy:
      restart_policy:
        condition: any
        delay: 5s
      placement:
        constraints: [ node.role == manager ]

  # Менеджер баз данных
  adminer:
    image: adminer
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      - 8089:8080
    networks:
      - replica-net
    deploy:
      restart_policy:
        condition: any
        delay: 5s
      placement:
        constraints: [ node.role == manager ]

  # Master БД
  postgres_master:
    image: postgresql:15
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=sa2
      - POSTGRESQL_REPLICATION_PASSWORD=1234
      - POSTGRESQL_USERNAME=sa
      - POSTGRESQL_PASSWORD=1234
      - POSTGRESQL_DATABASE=docker_replica
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/cities/ru:/etc/cities/ru
    networks:
      - replica-net
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  # Slave БД
  postgres_replica:
    image: postgresql:15
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=sa2
      - POSTGRESQL_REPLICATION_PASSWORD=1234
      - POSTGRESQL_MASTER_HOST=postgres_master
      - POSTGRESQL_PASSWORD=1234
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - replica-net
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == worker]
 
volumes:
  postgres-data:

networks:
  replica-net:
    driver: overlay
    name: replica-net
